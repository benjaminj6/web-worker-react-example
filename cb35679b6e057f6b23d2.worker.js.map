{"version":3,"sources":["webpack:///webpack/bootstrap cb35679b6e057f6b23d2","webpack:///./src/counter-worker.js"],"names":["window","console","log","self","onmessage","data","type","count","postMessage"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA,KAAI,OAAOA,MAAP,KAAkB,WAAtB,EAAmC;AACjCC,WAAQC,GAAR,CAAY,iCAAZ;AACAD,WAAQC,GAAR,CAAY,wBAAZ,EAAsCC,IAAtC;;AAEAC,eAAY,yBAAc;AAAA,SAAXC,IAAW,QAAXA,IAAW;AAAA,SAChBC,IADgB,GACAD,IADA,CAChBC,IADgB;AAAA,SACVC,KADU,GACAF,IADA,CACVE,KADU;;;AAGxB,aAAQD,IAAR;AACE,YAAK,KAAL;AACEL,iBAAQC,GAAR,iCAAyCK,QAAQ,CAAjD;AACAC,qBAAY,EAAED,OAAOA,QAAQ,CAAjB,EAAZ;AACA;AACF,YAAK,KAAL;AACEN,iBAAQC,GAAR,iCAAyCK,QAAQ,CAAjD;;AAEA,aAAIA,QAAQ,CAAZ,EAAe;AACbC,uBAAY,EAAED,OAAOA,QAAQ,CAAjB,EAAZ;AACD;;AAED;AACF;AACEN,iBAAQC,GAAR,+BAAwCI,IAAxC;AACA;AAfJ;AAiBD,IApBD;AAqBD,E","file":"cb35679b6e057f6b23d2.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cb35679b6e057f6b23d2","if (typeof window === 'undefined') {\n  console.log('yay! inside the worker scope ðŸ˜Ž')\n  console.log('current context is -- ', self)\n\n  onmessage = ({ data }) => {\n    const { type, count } = data\n\n    switch (type) {\n      case 'Inc':\n        console.log(`inc message, new count is ${count + 1}`)\n        postMessage({ count: count + 1 })\n        return\n      case 'Dec':\n        console.log(`dec message, new count is ${count - 1}`)\n\n        if (count > 0) {\n          postMessage({ count: count - 1 })\n        }\n\n        return\n      default:\n        console.log(`unknown message of type \"${type}\"`)\n        return\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/counter-worker.js"],"sourceRoot":""}